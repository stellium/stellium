const fs = require('fs');
const numCPUs = require('os').cpus().length;
const cluster = require('cluster');


function initiate(env,
                  app,
                  port,
                  http,
                  https,
                  onError,
                  onListening) {

    if (cluster.isMaster) {

        console.log('Launching ' + numCPUs + ' clusters');

        for (let i = 0; i < numCPUs; i++) {
            cluster.fork();
            if (i === (numCPUs - 1)) console.log('Master cluster ready');
        }

        cluster.on('exit', function (worker) {
            console.log('Worker ' + worker.process.pid + ' killed.');
        });

    } else {

        app.set('port', port);

        let server;

        if (!env.use_ssl) {

            server = http.createServer(app);

        } else {

            let options = {
                key: fs.readFileSync(env.ssl_path + 'localhost.key'),
                cert: fs.readFileSync(env.ssl_path + 'localhost.crt'),
                requestCert: false,
                rejectUnauthorized: false
            };

            server = https.createServer(options, app);
        }

        server.listen(port);
        server.on('error', onError);
        server.on('listening', onListening);
    }
}

module.exports = initiate;
