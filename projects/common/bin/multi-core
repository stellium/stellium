const fs = require('fs')
const numCPUs = require('os').cpus().length
const cluster = require('cluster')


function initiate(env,
                  app,
                  port,
                  protocol,
                  onError,
                  onListening) {

	if (cluster.isMaster) {

		console.log('Launching ' + numCPUs + ' CPU clusters')

		for (let i = 0; i < numCPUs; i++) {
			cluster.fork()
			if (i === (numCPUs - 1)) console.log('Master cluster ready')
		}

		cluster.on('exit', function (worker) {
			console.log('Worker ' + worker.process.pid + ' killed.')
		})

	}

	if (cluster.isWorker) {

		app.set('port', port)

		let server

		if (!env.use_ssl) {

			server = protocol.createServer(app)

		} else {

			let options = {
				key: fs.readFileSync(env.ssl_path + 'localhost.key'),
				cert: fs.readFileSync(env.ssl_path + 'localhost.crt'),
				requestCert: false,
				rejectUnauthorized: false
			};

			server = protocol.createServer(options, app)
		}

		server.listen(port)
		server.on('error', onError)
		server.on('listening', onListening)
	}
}

module.exports = initiate
